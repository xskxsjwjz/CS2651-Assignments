(0000) 3000  0011000000000000 (   1)                 .ORIG x3000
(3000) EC8B  1110110010001011 (   5)                 LEA   R6 StackBase
(3001) 1DA1  0001110110100001 (   6)                 ADD   R6 R6 #1
(3002) E029  1110000000101001 (   7)                 LEA   R0 PromptMsg
(3003) F022  1111000000100010 (   8)                 TRAP  x22
(3004) F020  1111000000100000 (   9)                 TRAP  x20
(3005) F021  1111000000100001 (  10)                 TRAP  x21
(3006) 2237  0010001000110111 (  14) Test            LD    R1 NegX
(3007) 1240  0001001001000000 (  15)                 ADD   R1 R1 R0
(3008) 0422  0000010000100010 (  16)                 BRZ   Exit
(3009) 2235  0010001000110101 (  18) CM1             LD    R1 NegC
(300A) 1240  0001001001000000 (  19)                 ADD   R1 R1 R0
(300B) 0A01  0000101000000001 (  20)                 BRNP  CM2
(300C) 48DC  0100100011011100 (  21)                 JSR   OpClear
(300D) 2232  0010001000110010 (  23) CM2             LD    R1 NegPlus
(300E) 1240  0001001001000000 (  24)                 ADD   R1 R1 R0
(300F) 0A01  0000101000000001 (  25)                 BRNP  CM3
(3010) 4936  0100100100110110 (  26)                 JSR   OpAdd
(3011) 2230  0010001000110000 (  29) CM3             LD    R1 NegMult
(3012) 1240  0001001001000000 (  30)                 ADD   R1 R1 R0
(3013) 0A01  0000101000000001 (  31)                 BRNP  CM4
(3014) 4973  0100100101110011 (  32)                 JSR   OpMult
(3015) 222B  0010001000101011 (  35) CM4             LD    R1 NegMinus
(3016) 1240  0001001001000000 (  36)                 ADD   R1 R1 R0
(3017) 0A01  0000101000000001 (  37)                 BRNP  CM5
(3018) 4A05  0100101000000101 (  38)                 JSR   OpNeg
(3019) 2229  0010001000101001 (  41) CM5             LD    R1 NegD
(301A) 1240  0001001001000000 (  42)                 ADD   R1 R1 R0
(301B) 0A01  0000101000000001 (  43)                 BRNP  CM6
(301C) 48C1  0100100011000001 (  44)                 JSR   OpDisplay
(301D) 2226  0010001000100110 (  47) CM6             LD    R1 NegMod
(301E) 1240  0001001001000000 (  48)                 ADD   R1 R1 R0
(301F) 0A01  0000101000000001 (  49)                 BRNP  CM7
(3020) 4986  0100100110000110 (  50)                 JSR   OpMod
(3021) 2223  0010001000100011 (  53) CM7             LD    R1 NegXOR
(3022) 1240  0001001001000000 (  54)                 ADD   R1 R1 R0
(3023) 0A01  0000101000000001 (  55)                 BRNP  CM8
(3024) 49E2  0100100111100010 (  56)                 JSR   OpXOR
(3025) 4820  0100100000100000 (  58) CM8             JSR   PushValue
(3026) E005  1110000000000101 (  60) NewCommand      LEA   R0 PromptMsg
(3027) F022  1111000000100010 (  61)                 TRAP  x22
(3028) F020  1111000000100000 (  62)                 TRAP  x20
(3029) F021  1111000000100001 (  63)                 TRAP  x21
(302A) 4FDB  0100111111011011 (  64)                 JSR   Test
(302B) F025  1111000000100101 (  65) Exit            TRAP  x25
(302C) 000A  0000000000001010 (  66) PromptMsg       .FILL x000A
(302D) 0045  0000000001000101 (  67)                 .FILL x0045
(302E) 006E  0000000001101110 (  67)                 .FILL x006E
(302F) 0074  0000000001110100 (  67)                 .FILL x0074
(3030) 0065  0000000001100101 (  67)                 .FILL x0065
(3031) 0072  0000000001110010 (  67)                 .FILL x0072
(3032) 0020  0000000000100000 (  67)                 .FILL x0020
(3033) 0061  0000000001100001 (  67)                 .FILL x0061
(3034) 0020  0000000000100000 (  67)                 .FILL x0020
(3035) 0063  0000000001100011 (  67)                 .FILL x0063
(3036) 006F  0000000001101111 (  67)                 .FILL x006F
(3037) 006D  0000000001101101 (  67)                 .FILL x006D
(3038) 006D  0000000001101101 (  67)                 .FILL x006D
(3039) 0061  0000000001100001 (  67)                 .FILL x0061
(303A) 006E  0000000001101110 (  67)                 .FILL x006E
(303B) 0064  0000000001100100 (  67)                 .FILL x0064
(303C) 003A  0000000000111010 (  67)                 .FILL x003A
(303D) 0000  0000000000000000 (  67)                 .FILL x0000
(303E) FFA8  1111111110101000 (  68) NegX            .FILL xFFA8
(303F) FFBD  1111111110111101 (  69) NegC            .FILL xFFBD
(3040) FFD5  1111111111010101 (  70) NegPlus         .FILL xFFD5
(3041) FFD3  1111111111010011 (  71) NegMinus        .FILL xFFD3
(3042) FFD6  1111111111010110 (  72) NegMult         .FILL xFFD6
(3043) FFBC  1111111110111100 (  73) NegD            .FILL xFFBC
(3044) FFDB  1111111111011011 (  74) NegMod          .FILL xFFDB
(3045) FFC0  1111111111000000 (  75) NegXOR          .FILL xFFC0
(3046) E2C3  1110001011000011 (  82) PushValue       LEA   R1 ASCIIBUFF
(3047) 2429  0010010000101001 (  83)                 LD    R2 MaxDigits
(3048) 1636  0001011000110110 (  85) ValueLoop       ADD   R3 R0 #-10
(3049) 0408  0000010000001000 (  86)                 BRZ   GoodInput
(304A) 14A0  0001010010100000 (  87)                 ADD   R2 R2 #0
(304B) 040D  0000010000001101 (  88)                 BRZ   TooLargeInput
(304C) 14BF  0001010010111111 (  89)                 ADD   R2 R2 #-1
(304D) 7040  0111000001000000 (  90)                 STR   R0 R1 #0
(304E) 1261  0001001001100001 (  91)                 ADD   R1 R1 #1
(304F) F020  1111000000100000 (  92)                 TRAP  x20
(3050) F021  1111000000100001 (  93)                 TRAP  x21
(3051) 0FF6  0000111111110110 (  94)                 BRNZP ValueLoop
(3052) E4B7  1110010010110111 (  96) GoodInput       LEA   R2 ASCIIBUFF
(3053) 94BF  1001010010111111 (  97)                 NOT   R2 R2
(3054) 14A1  0001010010100001 (  98)                 ADD   R2 R2 #1
(3055) 1242  0001001001000010 (  99)                 ADD   R1 R1 R2
(3056) 4895  0100100010010101 ( 100)                 JSR   ASCIItoBinary
(3057) 485A  0100100001011010 ( 101)                 JSR   PUSH
(3058) 0FCD  0000111111001101 ( 102)                 BRNZP NewCommand
(3059) F020  1111000000100000 ( 104) TooLargeInput   TRAP  x20
(305A) F021  1111000000100001 ( 105)                 TRAP  x21
(305B) 1636  0001011000110110 ( 106)                 ADD   R3 R0 #-10
(305C) 0BFC  0000101111111100 ( 107)                 BRNP  TooLargeInput
(305D) E002  1110000000000010 ( 108)                 LEA   R0 TooManyDigits
(305E) F022  1111000000100010 ( 109)                 TRAP  x22
(305F) 0FC6  0000111111000110 ( 110)                 BRNZP NewCommand
(3060) 000A  0000000000001010 ( 111) TooManyDigits   .FILL x000A
(3061) 0054  0000000001010100 ( 112)                 .FILL x0054
(3062) 006F  0000000001101111 ( 112)                 .FILL x006F
(3063) 006F  0000000001101111 ( 112)                 .FILL x006F
(3064) 0020  0000000000100000 ( 112)                 .FILL x0020
(3065) 006D  0000000001101101 ( 112)                 .FILL x006D
(3066) 0061  0000000001100001 ( 112)                 .FILL x0061
(3067) 006E  0000000001101110 ( 112)                 .FILL x006E
(3068) 0079  0000000001111001 ( 112)                 .FILL x0079
(3069) 0020  0000000000100000 ( 112)                 .FILL x0020
(306A) 0064  0000000001100100 ( 112)                 .FILL x0064
(306B) 0069  0000000001101001 ( 112)                 .FILL x0069
(306C) 0067  0000000001100111 ( 112)                 .FILL x0067
(306D) 0069  0000000001101001 ( 112)                 .FILL x0069
(306E) 0074  0000000001110100 ( 112)                 .FILL x0074
(306F) 0073  0000000001110011 ( 112)                 .FILL x0073
(3070) 0000  0000000000000000 ( 112)                 .FILL x0000
(3071) 0003  0000000000000011 ( 113) MaxDigits       .FILL x0003
(3072) E019  1110000000011001 ( 119) POP             LEA   R0 StackBase
(3073) 903F  1001000000111111 ( 120)                 NOT   R0 R0
(3074) 1021  0001000000100001 ( 121)                 ADD   R0 R0 #1
(3075) 1006  0001000000000110 ( 122)                 ADD   R0 R0 R6
(3076) 0204  0000001000000100 ( 123)                 BRP   Underflow
(3077) 6180  0110000110000000 ( 124)                 LDR   R0 R6 #0
(3078) 1DA1  0001110110100001 ( 125)                 ADD   R6 R6 #1
(3079) 5B60  0101101101100000 ( 126)                 AND   R5 R5 #0
(307A) C1C0  1100000111000000 ( 127)                 RET   
(307B) 3E06  0011111000000110 ( 128) Underflow       ST    R7 Savepop
(307C) E010  1110000000010000 ( 129)                 LEA   R0 UnderflowMsg
(307D) F022  1111000000100010 ( 130)                 TRAP  x22
(307E) 2E03  0010111000000011 ( 131)                 LD    R7 Savepop
(307F) 5B60  0101101101100000 ( 132)                 AND   R5 R5 #0
(3080) 1B61  0001101101100001 ( 133)                 ADD   R5 R5 #1
(3081) C1C0  1100000111000000 ( 134)                 RET   
(3082) 0000  0000000000000000 ( 135) Savepop         .FILL x0000
(3083) 0000  0000000000000000 ( 137) StackMax        .FILL x0000
(3084) 0000  0000000000000000 ( 137)                 .FILL x0000
(3085) 0000  0000000000000000 ( 137)                 .FILL x0000
(3086) 0000  0000000000000000 ( 137)                 .FILL x0000
(3087) 0000  0000000000000000 ( 137)                 .FILL x0000
(3088) 0000  0000000000000000 ( 137)                 .FILL x0000
(3089) 0000  0000000000000000 ( 137)                 .FILL x0000
(308A) 0000  0000000000000000 ( 137)                 .FILL x0000
(308B) 0000  0000000000000000 ( 137)                 .FILL x0000
(308C) 0000  0000000000000000 ( 137) StackBase       .FILL x0000
(308D) 000A  0000000000001010 ( 138) UnderflowMsg    .FILL x000A
(308E) 0045  0000000001000101 ( 139)                 .FILL x0045
(308F) 0072  0000000001110010 ( 139)                 .FILL x0072
(3090) 0072  0000000001110010 ( 139)                 .FILL x0072
(3091) 006F  0000000001101111 ( 139)                 .FILL x006F
(3092) 0072  0000000001110010 ( 139)                 .FILL x0072
(3093) 003A  0000000000111010 ( 139)                 .FILL x003A
(3094) 0020  0000000000100000 ( 139)                 .FILL x0020
(3095) 0054  0000000001010100 ( 139)                 .FILL x0054
(3096) 006F  0000000001101111 ( 139)                 .FILL x006F
(3097) 006F  0000000001101111 ( 139)                 .FILL x006F
(3098) 0020  0000000000100000 ( 139)                 .FILL x0020
(3099) 0046  0000000001000110 ( 139)                 .FILL x0046
(309A) 0065  0000000001100101 ( 139)                 .FILL x0065
(309B) 0077  0000000001110111 ( 139)                 .FILL x0077
(309C) 0020  0000000000100000 ( 139)                 .FILL x0020
(309D) 0056  0000000001010110 ( 139)                 .FILL x0056
(309E) 0061  0000000001100001 ( 139)                 .FILL x0061
(309F) 006C  0000000001101100 ( 139)                 .FILL x006C
(30A0) 0075  0000000001110101 ( 139)                 .FILL x0075
(30A1) 0065  0000000001100101 ( 139)                 .FILL x0065
(30A2) 0073  0000000001110011 ( 139)                 .FILL x0073
(30A3) 0020  0000000000100000 ( 139)                 .FILL x0020
(30A4) 006F  0000000001101111 ( 139)                 .FILL x006F
(30A5) 006E  0000000001101110 ( 139)                 .FILL x006E
(30A6) 0020  0000000000100000 ( 139)                 .FILL x0020
(30A7) 0074  0000000001110100 ( 139)                 .FILL x0074
(30A8) 0068  0000000001101000 ( 139)                 .FILL x0068
(30A9) 0065  0000000001100101 ( 139)                 .FILL x0065
(30AA) 0020  0000000000100000 ( 139)                 .FILL x0020
(30AB) 0053  0000000001010011 ( 139)                 .FILL x0053
(30AC) 0074  0000000001110100 ( 139)                 .FILL x0074
(30AD) 0061  0000000001100001 ( 139)                 .FILL x0061
(30AE) 0063  0000000001100011 ( 139)                 .FILL x0063
(30AF) 006B  0000000001101011 ( 139)                 .FILL x006B
(30B0) 002E  0000000000101110 ( 139)                 .FILL x002E
(30B1) 0000  0000000000000000 ( 139)                 .FILL x0000
(30B2) 3214  0011001000010100 ( 146) PUSH            ST    R1 Save1
(30B3) E3CF  1110001111001111 ( 147)                 LEA   R1 StackMax
(30B4) 927F  1001001001111111 ( 148)                 NOT   R1 R1
(30B5) 1261  0001001001100001 ( 149)                 ADD   R1 R1 #1
(30B6) 1246  0001001001000110 ( 150)                 ADD   R1 R1 R6
(30B7) 0C03  0000110000000011 ( 151)                 BRNZ  Overflow
(30B8) 1DBF  0001110110111111 ( 152)                 ADD   R6 R6 #-1
(30B9) 7180  0111000110000000 ( 153)                 STR   R0 R6 #0
(30BA) 0E08  0000111000001000 ( 154)                 BRNZP Success_exit
(30BB) 3E0A  0011111000001010 ( 155) Overflow        ST    R7 Savepush
(30BC) E00B  1110000000001011 ( 156)                 LEA   R0 OverflowMsg
(30BD) F022  1111000000100010 ( 157)                 TRAP  x22
(30BE) 2E07  0010111000000111 ( 158)                 LD    R7 Savepush
(30BF) 2207  0010001000000111 ( 159)                 LD    R1 Save1
(30C0) 5B60  0101101101100000 ( 160)                 AND   R5 R5 #0
(30C1) 1B61  0001101101100001 ( 161)                 ADD   R5 R5 #1
(30C2) C1C0  1100000111000000 ( 162)                 RET   
(30C3) 2203  0010001000000011 ( 163) Success_exit    LD    R1 Save1
(30C4) 5B60  0101101101100000 ( 164)                 AND   R5 R5 #0
(30C5) C1C0  1100000111000000 ( 165)                 RET   
(30C6) 0000  0000000000000000 ( 166) Savepush        .FILL x0000
(30C7) 0000  0000000000000000 ( 167) Save1           .FILL x0000
(30C8) 0045  0000000001000101 ( 168) OverflowMsg     .FILL x0045
(30C9) 0072  0000000001110010 ( 168)                 .FILL x0072
(30CA) 0072  0000000001110010 ( 168)                 .FILL x0072
(30CB) 006F  0000000001101111 ( 168)                 .FILL x006F
(30CC) 0072  0000000001110010 ( 168)                 .FILL x0072
(30CD) 003A  0000000000111010 ( 168)                 .FILL x003A
(30CE) 0020  0000000000100000 ( 168)                 .FILL x0020
(30CF) 0053  0000000001010011 ( 168)                 .FILL x0053
(30D0) 0074  0000000001110100 ( 168)                 .FILL x0074
(30D1) 0061  0000000001100001 ( 168)                 .FILL x0061
(30D2) 0063  0000000001100011 ( 168)                 .FILL x0063
(30D3) 006B  0000000001101011 ( 168)                 .FILL x006B
(30D4) 0020  0000000000100000 ( 168)                 .FILL x0020
(30D5) 0069  0000000001101001 ( 168)                 .FILL x0069
(30D6) 0073  0000000001110011 ( 168)                 .FILL x0073
(30D7) 0020  0000000000100000 ( 168)                 .FILL x0020
(30D8) 0046  0000000001000110 ( 168)                 .FILL x0046
(30D9) 0075  0000000001110101 ( 168)                 .FILL x0075
(30DA) 006C  0000000001101100 ( 168)                 .FILL x006C
(30DB) 006C  0000000001101100 ( 168)                 .FILL x006C
(30DC) 002E  0000000000101110 ( 168)                 .FILL x002E
(30DD) 0000  0000000000000000 ( 168)                 .FILL x0000
(30DE) 4F93  0100111110010011 ( 174) OpDisplay       JSR   POP
(30DF) 1B60  0001101101100000 ( 175)                 ADD   R5 R5 #0
(30E0) 0345  0000001101000101 ( 176)                 BRP   NewCommand
(30E1) 4840  0100100001000000 ( 177)                 JSR   BinarytoASCII
(30E2) 2005  0010000000000101 ( 178)                 LD    R0 NewlineChar
(30E3) F021  1111000000100001 ( 179)                 TRAP  x21
(30E4) E025  1110000000100101 ( 180)                 LEA   R0 ASCIIBUFF
(30E5) F022  1111000000100010 ( 181)                 TRAP  x22
(30E6) 1DBF  0001110110111111 ( 182)                 ADD   R6 R6 #-1
(30E7) 0F3E  0000111100111110 ( 183)                 BRNZP NewCommand
(30E8) 000A  0000000000001010 ( 184) NewlineChar     .FILL x000A
(30E9) EDA2  1110110110100010 ( 190) OpClear         LEA   R6 StackBase
(30EA) 1DA1  0001110110100001 ( 191)                 ADD   R6 R6 #1
(30EB) 4F3A  0100111100111010 ( 192)                 JSR   NewCommand
(30EC) 5020  0101000000100000 ( 202) ASCIItoBinary   AND   R0 R0 #0
(30ED) 1260  0001001001100000 ( 203)                 ADD   R1 R1 #0
(30EE) 0419  0000010000011001 ( 204)                 BRZ   DoneAtoB
(30EF) 2619  0010011000011001 ( 206)                 LD    R3 NegASCIIOffset
(30F0) E419  1110010000011001 ( 207)                 LEA   R2 ASCIIBUFF
(30F1) 1481  0001010010000001 ( 208)                 ADD   R2 R2 R1
(30F2) 14BF  0001010010111111 ( 209)                 ADD   R2 R2 #-1
(30F3) 6880  0110100010000000 ( 211)                 LDR   R4 R2 #0
(30F4) 1903  0001100100000011 ( 212)                 ADD   R4 R4 R3
(30F5) 1004  0001000000000100 ( 213)                 ADD   R0 R0 R4
(30F6) 127F  0001001001111111 ( 215)                 ADD   R1 R1 #-1
(30F7) 0410  0000010000010000 ( 216)                 BRZ   DoneAtoB
(30F8) 14BF  0001010010111111 ( 217)                 ADD   R2 R2 #-1
(30F9) 6880  0110100010000000 ( 219)                 LDR   R4 R2 #0
(30FA) 1903  0001100100000011 ( 220)                 ADD   R4 R4 R3
(30FB) EA12  1110101000010010 ( 221)                 LEA   R5 LookUp10
(30FC) 1B44  0001101101000100 ( 222)                 ADD   R5 R5 R4
(30FD) 6940  0110100101000000 ( 223)                 LDR   R4 R5 #0
(30FE) 1004  0001000000000100 ( 224)                 ADD   R0 R0 R4
(30FF) 127F  0001001001111111 ( 226)                 ADD   R1 R1 #-1
(3100) 0407  0000010000000111 ( 227)                 BRZ   DoneAtoB
(3101) 14BF  0001010010111111 ( 228)                 ADD   R2 R2 #-1
(3102) 6880  0110100010000000 ( 230)                 LDR   R4 R2 #0
(3103) 1903  0001100100000011 ( 231)                 ADD   R4 R4 R3
(3104) EA13  1110101000010011 ( 232)                 LEA   R5 LookUp100
(3105) 1B44  0001101101000100 ( 233)                 ADD   R5 R5 R4
(3106) 6940  0110100101000000 ( 234)                 LDR   R4 R5 #0
(3107) 1004  0001000000000100 ( 235)                 ADD   R0 R0 R4
(3108) C1C0  1100000111000000 ( 237) DoneAtoB        RET   
(3109) FFD0  1111111111010000 ( 238) NegASCIIOffset  .FILL xFFD0
(310A) 0000  0000000000000000 ( 240) ASCIIBUFF       .FILL x0000
(310B) 0000  0000000000000000 ( 240)                 .FILL x0000
(310C) 0000  0000000000000000 ( 240)                 .FILL x0000
(310D) 0000  0000000000000000 ( 240)                 .FILL x0000
(310E) 0000  0000000000000000 ( 240) LookUp10        .FILL x0000
(310F) 000A  0000000000001010 ( 241)                 .FILL x000A
(3110) 0014  0000000000010100 ( 242)                 .FILL x0014
(3111) 001E  0000000000011110 ( 243)                 .FILL x001E
(3112) 0028  0000000000101000 ( 244)                 .FILL x0028
(3113) 0032  0000000000110010 ( 245)                 .FILL x0032
(3114) 003C  0000000000111100 ( 246)                 .FILL x003C
(3115) 0046  0000000001000110 ( 247)                 .FILL x0046
(3116) 0050  0000000001010000 ( 248)                 .FILL x0050
(3117) 005A  0000000001011010 ( 249)                 .FILL x005A
(3118) 0000  0000000000000000 ( 251) LookUp100       .FILL x0000
(3119) 0064  0000000001100100 ( 252)                 .FILL x0064
(311A) 00C8  0000000011001000 ( 253)                 .FILL x00C8
(311B) 012C  0000000100101100 ( 254)                 .FILL x012C
(311C) 0190  0000000110010000 ( 255)                 .FILL x0190
(311D) 01F4  0000000111110100 ( 256)                 .FILL x01F4
(311E) 0258  0000001001011000 ( 257)                 .FILL x0258
(311F) 02BC  0000001010111100 ( 258)                 .FILL x02BC
(3120) 0320  0000001100100000 ( 259)                 .FILL x0320
(3121) 0384  0000001110000100 ( 260)                 .FILL x0384
(3122) E3E7  1110001111100111 ( 269) BinarytoASCII   LEA   R1 ASCIIBUFF
(3123) 1020  0001000000100000 ( 270)                 ADD   R0 R0 #0
(3124) 0803  0000100000000011 ( 271)                 BRN   NegSign
(3125) 241B  0010010000011011 ( 272)                 LD    R2 ASCIIplus
(3126) 7440  0111010001000000 ( 273)                 STR   R2 R1 #0
(3127) 0E04  0000111000000100 ( 274)                 BRNZP Begin100
(3128) 2419  0010010000011001 ( 275) NegSign         LD    R2 ASCIIminus
(3129) 7440  0111010001000000 ( 276)                 STR   R2 R1 #0
(312A) 903F  1001000000111111 ( 277)                 NOT   R0 R0
(312B) 1021  0001000000100001 ( 278)                 ADD   R0 R0 #1
(312C) 2416  0010010000010110 ( 280) Begin100        LD    R2 ASCIIoffset
(312D) 2616  0010011000010110 ( 282)                 LD    R3 Neg100
(312E) 1003  0001000000000011 ( 283) Loop100         ADD   R0 R0 R3
(312F) 0802  0000100000000010 ( 284)                 BRN   End100
(3130) 14A1  0001010010100001 ( 285)                 ADD   R2 R2 #1
(3131) 0FFC  0000111111111100 ( 286)                 BRNZP Loop100
(3132) 7441  0111010001000001 ( 288) End100          STR   R2 R1 #1
(3133) 2611  0010011000010001 ( 289)                 LD    R3 Pos100
(3134) 1003  0001000000000011 ( 290)                 ADD   R0 R0 R3
(3135) 240D  0010010000001101 ( 292)                 LD    R2 ASCIIoffset
(3136) 260F  0010011000001111 ( 294) Begin10         LD    R3 Neg10
(3137) 1003  0001000000000011 ( 295) Loop10          ADD   R0 R0 R3
(3138) 0802  0000100000000010 ( 296)                 BRN   End10
(3139) 14A1  0001010010100001 ( 297)                 ADD   R2 R2 #1
(313A) 0FFC  0000111111111100 ( 298)                 BRNZP Loop10
(313B) 7442  0111010001000010 ( 300) End10           STR   R2 R1 #2
(313C) 102A  0001000000101010 ( 301)                 ADD   R0 R0 #10
(313D) 2405  0010010000000101 ( 302) Begin1          LD    R2 ASCIIoffset
(313E) 1480  0001010010000000 ( 303)                 ADD   R2 R2 R0
(313F) 7443  0111010001000011 ( 304)                 STR   R2 R1 #3
(3140) C1C0  1100000111000000 ( 305)                 RET   
(3141) 002B  0000000000101011 ( 307) ASCIIplus       .FILL x002B
(3142) 002D  0000000000101101 ( 308) ASCIIminus      .FILL x002D
(3143) 0030  0000000000110000 ( 309) ASCIIoffset     .FILL x0030
(3144) FF9C  1111111110011100 ( 310) Neg100          .FILL xFF9C
(3145) 0064  0000000001100100 ( 311) Pos100          .FILL x0064
(3146) FFF6  1111111111110110 ( 312) Neg10           .FILL xFFF6
(3147) 4F2A  0100111100101010 ( 320) OpAdd           JSR   POP
(3148) 1B60  0001101101100000 ( 321)                 ADD   R5 R5 #0
(3149) 020B  0000001000001011 ( 322)                 BRP   Exitadd
(314A) 1220  0001001000100000 ( 323)                 ADD   R1 R0 #0
(314B) 4F26  0100111100100110 ( 324)                 JSR   POP
(314C) 1B60  0001101101100000 ( 325)                 ADD   R5 R5 #0
(314D) 0206  0000001000000110 ( 326)                 BRP   Restore1_add
(314E) 1001  0001000000000001 ( 327)                 ADD   R0 R0 R1
(314F) 4806  0100100000000110 ( 328)                 JSR   RangeCheck
(3150) 0202  0000001000000010 ( 329)                 BRP   Restore2_add
(3151) 4F60  0100111101100000 ( 330)                 JSR   PUSH
(3152) 4ED3  0100111011010011 ( 331)                 JSR   NewCommand
(3153) 1DBF  0001110110111111 ( 332) Restore2_add    ADD   R6 R6 #-1
(3154) 1DBF  0001110110111111 ( 333) Restore1_add    ADD   R6 R6 #-1
(3155) 4ED0  0100111011010000 ( 334) Exitadd         JSR   NewCommand
(3156) 2A0E  0010101000001110 ( 341) RangeCheck      LD    R5 Neg999
(3157) 1805  0001100000000101 ( 342)                 ADD   R4 R0 R5
(3158) 0205  0000001000000101 ( 343)                 BRP   BadRange
(3159) 2A0C  0010101000001100 ( 344)                 LD    R5 Pos999
(315A) 1805  0001100000000101 ( 345)                 ADD   R4 R0 R5
(315B) 0802  0000100000000010 ( 346)                 BRN   BadRange
(315C) 5B60  0101101101100000 ( 347)                 AND   R5 R5 #0
(315D) C1C0  1100000111000000 ( 348)                 RET   
(315E) 3E08  0011111000001000 ( 349) BadRange        ST    R7 Save
(315F) E008  1110000000001000 ( 350)                 LEA   R0 RangeErrorMsg
(3160) F022  1111000000100010 ( 351)                 TRAP  x22
(3161) 2E05  0010111000000101 ( 352)                 LD    R7 Save
(3162) 5B60  0101101101100000 ( 353)                 AND   R5 R5 #0
(3163) 1B61  0001101101100001 ( 354)                 ADD   R5 R5 #1
(3164) C1C0  1100000111000000 ( 355)                 RET   
(3165) FC19  1111110000011001 ( 356) Neg999          .FILL xFC19
(3166) 03E7  0000001111100111 ( 357) Pos999          .FILL x03E7
(3167) 0000  0000000000000000 ( 358) Save            .FILL x0000
(3168) 000A  0000000000001010 ( 359) RangeErrorMsg   .FILL x000A
(3169) 0045  0000000001000101 ( 360)                 .FILL x0045
(316A) 0072  0000000001110010 ( 360)                 .FILL x0072
(316B) 0072  0000000001110010 ( 360)                 .FILL x0072
(316C) 006F  0000000001101111 ( 360)                 .FILL x006F
(316D) 0072  0000000001110010 ( 360)                 .FILL x0072
(316E) 003A  0000000000111010 ( 360)                 .FILL x003A
(316F) 0020  0000000000100000 ( 360)                 .FILL x0020
(3170) 004E  0000000001001110 ( 360)                 .FILL x004E
(3171) 0075  0000000001110101 ( 360)                 .FILL x0075
(3172) 006D  0000000001101101 ( 360)                 .FILL x006D
(3173) 0062  0000000001100010 ( 360)                 .FILL x0062
(3174) 0065  0000000001100101 ( 360)                 .FILL x0065
(3175) 0072  0000000001110010 ( 360)                 .FILL x0072
(3176) 0020  0000000000100000 ( 360)                 .FILL x0020
(3177) 0069  0000000001101001 ( 360)                 .FILL x0069
(3178) 0073  0000000001110011 ( 360)                 .FILL x0073
(3179) 0020  0000000000100000 ( 360)                 .FILL x0020
(317A) 006F  0000000001101111 ( 360)                 .FILL x006F
(317B) 0075  0000000001110101 ( 360)                 .FILL x0075
(317C) 0074  0000000001110100 ( 360)                 .FILL x0074
(317D) 0020  0000000000100000 ( 360)                 .FILL x0020
(317E) 006F  0000000001101111 ( 360)                 .FILL x006F
(317F) 0066  0000000001100110 ( 360)                 .FILL x0066
(3180) 0020  0000000000100000 ( 360)                 .FILL x0020
(3181) 0072  0000000001110010 ( 360)                 .FILL x0072
(3182) 0061  0000000001100001 ( 360)                 .FILL x0061
(3183) 006E  0000000001101110 ( 360)                 .FILL x006E
(3184) 0067  0000000001100111 ( 360)                 .FILL x0067
(3185) 0065  0000000001100101 ( 360)                 .FILL x0065
(3186) 002E  0000000000101110 ( 360)                 .FILL x002E
(3187) 0000  0000000000000000 ( 360)                 .FILL x0000
(3188) 56E0  0101011011100000 ( 368) OpMult          AND   R3 R3 #0
(3189) 4EE8  0100111011101000 ( 369)                 JSR   POP
(318A) 1B60  0001101101100000 ( 370)                 ADD   R5 R5 #0
(318B) 021A  0000001000011010 ( 371)                 BRP   Exitmul
(318C) 1220  0001001000100000 ( 372)                 ADD   R1 R0 #0
(318D) 4EE4  0100111011100100 ( 373)                 JSR   POP
(318E) 1B60  0001101101100000 ( 374)                 ADD   R5 R5 #0
(318F) 0215  0000001000010101 ( 375)                 BRP   Restore1_mul
(3190) 1420  0001010000100000 ( 376)                 ADD   R2 R0 #0
(3191) 0603  0000011000000011 ( 377)                 BRZP  PosMultiplier
(3192) 16E1  0001011011100001 ( 378)                 ADD   R3 R3 #1
(3193) 94BF  1001010010111111 ( 379)                 NOT   R2 R2
(3194) 14A1  0001010010100001 ( 380)                 ADD   R2 R2 #1
(3195) 5020  0101000000100000 ( 381) PosMultiplier   AND   R0 R0 #0
(3196) 14A0  0001010010100000 ( 382)                 ADD   R2 R2 #0
(3197) 040A  0000010000001010 ( 383)                 BRZ   PushMult
(3198) 1001  0001000000000001 ( 385) MultLoop        ADD   R0 R0 R1
(3199) 14BF  0001010010111111 ( 386)                 ADD   R2 R2 #-1
(319A) 03FD  0000001111111101 ( 387)                 BRP   MultLoop
(319B) 4FBA  0100111110111010 ( 389)                 JSR   RangeCheck
(319C) 1B60  0001101101100000 ( 390)                 ADD   R5 R5 #0
(319D) 0206  0000001000000110 ( 391)                 BRP   Restore2_mul
(319E) 16E0  0001011011100000 ( 393)                 ADD   R3 R3 #0
(319F) 0402  0000010000000010 ( 394)                 BRZ   PushMult
(31A0) 903F  1001000000111111 ( 395)                 NOT   R0 R0
(31A1) 1021  0001000000100001 ( 396)                 ADD   R0 R0 #1
(31A2) 4F0F  0100111100001111 ( 397) PushMult        JSR   PUSH
(31A3) 4E82  0100111010000010 ( 398)                 JSR   NewCommand
(31A4) 1DBF  0001110110111111 ( 399) Restore2_mul    ADD   R6 R6 #-1
(31A5) 1DBF  0001110110111111 ( 400) Restore1_mul    ADD   R6 R6 #-1
(31A6) 4E7F  0100111001111111 ( 401) Exitmul         JSR   NewCommand
(31A7) 4ECA  0100111011001010 ( 406) OpMod           JSR   POP
(31A8) 1B60  0001101101100000 ( 407)                 ADD   R5 R5 #0
(31A9) 021D  0000001000011101 ( 408)                 BRP   Exitmod
(31AA) 1220  0001001000100000 ( 409)                 ADD   R1 R0 #0
(31AB) 4EC6  0100111011000110 ( 410)                 JSR   POP
(31AC) 1B60  0001101101100000 ( 411)                 ADD   R5 R5 #0
(31AD) 0218  0000001000011000 ( 412)                 BRP   Restore1_mod
(31AE) 1420  0001010000100000 ( 413)                 ADD   R2 R0 #0
(31AF) 1260  0001001001100000 ( 414)                 ADD   R1 R1 #0
(31B0) 0204  0000001000000100 ( 415)                 BRP   PosModulus
(31B1) 080E  0000100000001110 ( 416)                 BRN   NegModulus
(31B2) E015  1110000000010101 ( 417)                 LEA   R0 Mod0Msg
(31B3) F022  1111000000100010 ( 418)                 TRAP  x22
(31B4) 4810  0100100000010000 ( 419)                 JSR   Restore2_mod
(31B5) 5020  0101000000100000 ( 420) PosModulus      AND   R0 R0 #0
(31B6) 927F  1001001001111111 ( 421)                 NOT   R1 R1
(31B7) 1261  0001001001100001 ( 422)                 ADD   R1 R1 #1
(31B8) 1481  0001010010000001 ( 423) PosModLoop1     ADD   R2 R2 R1
(31B9) 07FE  0000011111111110 ( 424)                 BRZP  PosModLoop1
(31BA) 127F  0001001001111111 ( 425)                 ADD   R1 R1 #-1
(31BB) 927F  1001001001111111 ( 426)                 NOT   R1 R1
(31BC) 1481  0001010010000001 ( 427) PosModLoop2     ADD   R2 R2 R1
(31BD) 09FE  0000100111111110 ( 428)                 BRN   PosModLoop2
(31BE) 10A0  0001000010100000 ( 429)                 ADD   R0 R2 #0
(31BF) 4803  0100100000000011 ( 430)                 JSR   PushMod
(31C0) E023  1110000000100011 ( 431) NegModulus      LEA   R0 NegModMsg
(31C1) F022  1111000000100010 ( 432)                 TRAP  x22
(31C2) 4802  0100100000000010 ( 433)                 JSR   Restore2_mod
(31C3) 4EEE  0100111011101110 ( 434) PushMod         JSR   PUSH
(31C4) 4E61  0100111001100001 ( 435)                 JSR   NewCommand
(31C5) 1DBF  0001110110111111 ( 436) Restore2_mod    ADD   R6 R6 #-1
(31C6) 1DBF  0001110110111111 ( 437) Restore1_mod    ADD   R6 R6 #-1
(31C7) 4E5E  0100111001011110 ( 438) Exitmod         JSR   NewCommand
(31C8) 000A  0000000000001010 ( 439) Mod0Msg         .FILL x000A
(31C9) 0045  0000000001000101 ( 440)                 .FILL x0045
(31CA) 0072  0000000001110010 ( 440)                 .FILL x0072
(31CB) 0072  0000000001110010 ( 440)                 .FILL x0072
(31CC) 006F  0000000001101111 ( 440)                 .FILL x006F
(31CD) 0072  0000000001110010 ( 440)                 .FILL x0072
(31CE) 003A  0000000000111010 ( 440)                 .FILL x003A
(31CF) 0020  0000000000100000 ( 440)                 .FILL x0020
(31D0) 0030  0000000000110000 ( 440)                 .FILL x0030
(31D1) 0020  0000000000100000 ( 440)                 .FILL x0020
(31D2) 006D  0000000001101101 ( 440)                 .FILL x006D
(31D3) 006F  0000000001101111 ( 440)                 .FILL x006F
(31D4) 0064  0000000001100100 ( 440)                 .FILL x0064
(31D5) 0075  0000000001110101 ( 440)                 .FILL x0075
(31D6) 006C  0000000001101100 ( 440)                 .FILL x006C
(31D7) 0075  0000000001110101 ( 440)                 .FILL x0075
(31D8) 0073  0000000001110011 ( 440)                 .FILL x0073
(31D9) 0020  0000000000100000 ( 440)                 .FILL x0020
(31DA) 0064  0000000001100100 ( 440)                 .FILL x0064
(31DB) 0065  0000000001100101 ( 440)                 .FILL x0065
(31DC) 0074  0000000001110100 ( 440)                 .FILL x0074
(31DD) 0065  0000000001100101 ( 440)                 .FILL x0065
(31DE) 0063  0000000001100011 ( 440)                 .FILL x0063
(31DF) 0074  0000000001110100 ( 440)                 .FILL x0074
(31E0) 0065  0000000001100101 ( 440)                 .FILL x0065
(31E1) 0064  0000000001100100 ( 440)                 .FILL x0064
(31E2) 002E  0000000000101110 ( 440)                 .FILL x002E
(31E3) 0000  0000000000000000 ( 440)                 .FILL x0000
(31E4) 000A  0000000000001010 ( 441) NegModMsg       .FILL x000A
(31E5) 0045  0000000001000101 ( 442)                 .FILL x0045
(31E6) 0072  0000000001110010 ( 442)                 .FILL x0072
(31E7) 0072  0000000001110010 ( 442)                 .FILL x0072
(31E8) 006F  0000000001101111 ( 442)                 .FILL x006F
(31E9) 0072  0000000001110010 ( 442)                 .FILL x0072
(31EA) 003A  0000000000111010 ( 442)                 .FILL x003A
(31EB) 0020  0000000000100000 ( 442)                 .FILL x0020
(31EC) 004E  0000000001001110 ( 442)                 .FILL x004E
(31ED) 0065  0000000001100101 ( 442)                 .FILL x0065
(31EE) 0067  0000000001100111 ( 442)                 .FILL x0067
(31EF) 0061  0000000001100001 ( 442)                 .FILL x0061
(31F0) 0074  0000000001110100 ( 442)                 .FILL x0074
(31F1) 0069  0000000001101001 ( 442)                 .FILL x0069
(31F2) 0076  0000000001110110 ( 442)                 .FILL x0076
(31F3) 0065  0000000001100101 ( 442)                 .FILL x0065
(31F4) 0020  0000000000100000 ( 442)                 .FILL x0020
(31F5) 006D  0000000001101101 ( 442)                 .FILL x006D
(31F6) 006F  0000000001101111 ( 442)                 .FILL x006F
(31F7) 0064  0000000001100100 ( 442)                 .FILL x0064
(31F8) 0075  0000000001110101 ( 442)                 .FILL x0075
(31F9) 006C  0000000001101100 ( 442)                 .FILL x006C
(31FA) 0075  0000000001110101 ( 442)                 .FILL x0075
(31FB) 0073  0000000001110011 ( 442)                 .FILL x0073
(31FC) 0020  0000000000100000 ( 442)                 .FILL x0020
(31FD) 0064  0000000001100100 ( 442)                 .FILL x0064
(31FE) 0065  0000000001100101 ( 442)                 .FILL x0065
(31FF) 0074  0000000001110100 ( 442)                 .FILL x0074
(3200) 0065  0000000001100101 ( 442)                 .FILL x0065
(3201) 0063  0000000001100011 ( 442)                 .FILL x0063
(3202) 0074  0000000001110100 ( 442)                 .FILL x0074
(3203) 0065  0000000001100101 ( 442)                 .FILL x0065
(3204) 0064  0000000001100100 ( 442)                 .FILL x0064
(3205) 002E  0000000000101110 ( 442)                 .FILL x002E
(3206) 0000  0000000000000000 ( 442)                 .FILL x0000
(3207) 4E6A  0100111001101010 ( 445) OpXOR           JSR   POP
(3208) 1B60  0001101101100000 ( 446)                 ADD   R5 R5 #0
(3209) 03BD  0000001110111101 ( 447)                 BRP   Exitmod
(320A) 1220  0001001000100000 ( 448)                 ADD   R1 R0 #0
(320B) 4E66  0100111001100110 ( 449)                 JSR   POP
(320C) 1B60  0001101101100000 ( 450)                 ADD   R5 R5 #0
(320D) 020F  0000001000001111 ( 451)                 BRP   Restore1_XOR
(320E) 1420  0001010000100000 ( 452)                 ADD   R2 R0 #0
(320F) 5020  0101000000100000 ( 453)                 AND   R0 R0 #0
(3210) 94BF  1001010010111111 ( 455)                 NOT   R2 R2
(3211) 5642  0101011001000010 ( 456)                 AND   R3 R1 R2
(3212) 94BF  1001010010111111 ( 458)                 NOT   R2 R2
(3213) 927F  1001001001111111 ( 459)                 NOT   R1 R1
(3214) 5842  0101100001000010 ( 460)                 AND   R4 R1 R2
(3215) 96FF  1001011011111111 ( 462)                 NOT   R3 R3
(3216) 993F  1001100100111111 ( 463)                 NOT   R4 R4
(3217) 50C4  0101000011000100 ( 464)                 AND   R0 R3 R4
(3218) 903F  1001000000111111 ( 465)                 NOT   R0 R0
(3219) 4800  0100100000000000 ( 466)                 JSR   PUSHXOR
(321A) 4E97  0100111010010111 ( 467) PUSHXOR         JSR   PUSH
(321B) 4E0A  0100111000001010 ( 468)                 JSR   NewCommand
(321C) 1DBF  0001110110111111 ( 469) Restore2_XOR    ADD   R6 R6 #-1
(321D) 1DBF  0001110110111111 ( 470) Restore1_XOR    ADD   R6 R6 #-1
(321E) 4E53  0100111001010011 ( 476) OpNeg           JSR   POP
(321F) 1B60  0001101101100000 ( 477)                 ADD   R5 R5 #0
(3220) 0203  0000001000000011 ( 478)                 BRP   Exitneg
(3221) 903F  1001000000111111 ( 479)                 NOT   R0 R0
(3222) 1021  0001000000100001 ( 480)                 ADD   R0 R0 #1
(3223) 4E8E  0100111010001110 ( 481)                 JSR   PUSH
(3224) 4E01  0100111000000001 ( 482) Exitneg         JSR   NewCommand
